version: "3.9"
services:
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ${CONFIG_PATH}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    devices:
      - /dev/ttyACM0:/dev/ttyUSB0
    privileged: true
    network_mode: host
    restart: unless-stopped

  vpn:
    image: ghcr.io/bubuntux/nordvpn:latest
    cap_add:
      - NET_ADMIN               # Required
    environment:                # Review https://github.com/bubuntux/nordvpn#environment-variables
      - USER=${NORD_VPN_USER}   # Required
      - PASS=${NORD_VPN_PASS}   # Required
      - CONNECT=United_States
      - TECHNOLOGY=NordLynx
      - NETWORK=192.168.1.0/24  # So it can be accessed within the local network
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp

  transmission:
    image: ghcr.io/linuxserver/transmission:latest
    container_name: transmission
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      # - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
      # - USER=username #optional
      # - PASS=password #optional
      # - WHITELIST=iplist #optional
      # - HOST_WHITELIST=dnsnane list #optional
    volumes:
      - ${CONFIG_PATH}/transmission:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${DOWNLOADS_PATH}/transmissionwatch:/watch
    restart: unless-stopped

  jackett:
    image: ghcr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - AUTO_UPDATE=true #optional
    volumes:
      - ${CONFIG_PATH}/jackett/config:/config
      - ${DOWNLOADS_PATH}:/jackett/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/Los_Angeles
    volumes:
    - ${CONFIG_PATH}/sonarr:/config
    - ${MULTIMEDIA_PATH}:/tv #optional
    - ${DOWNLOADS_PATH}:/downloads #optional
    ports:
    - 8989:8989
    restart: unless-stopped

  nginxproxymanager:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: nginxproxymanagerdb
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: npm
      DB_MYSQL_PASSWORD: npm
      DB_MYSQL_NAME: npm
    volumes:
      - ${CONFIG_PATH}/nginxproxymanager/data:/data
      - ${CONFIG_PATH}/nginxproxymanager/letsencrypt:/etc/letsencrypt

  nginxproxymanagerdb:
    image: jc21/mariadb-aria:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: npm
      MYSQL_DATABASE: npm
      MYSQL_USER: npm
      MYSQL_PASSWORD: npm
    volumes:
      - ${CONFIG_PATH}/nginxproxymanager/mysql:/var/lib/mysql

  miniflux:
    image: miniflux/miniflux:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      minifluxdb:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://miniflux:secret@minifluxdb/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER}
      - ADMIN_PASSWORD=${MINIFLUX_PASS}

  minifluxdb:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
    volumes:
      - ${CONFIG_PATH}/miniflux/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: --cleanup
    restart: unless-stopped
