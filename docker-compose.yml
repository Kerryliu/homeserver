version: "3.9"
services:
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant
    volumes:
      - ${CONFIG_PATH}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
        #devices:
        #- /dev/ttyACM0:/dev/ttyUSB0
    privileged: true
    network_mode: host
    restart: unless-stopped

  vpn:
    image: ghcr.io/bubuntux/nordlynx
    cap_add:
      - NET_ADMIN #required
    environment:
      - PRIVATE_KEY=${NORD_VPN_PRIVATE_KEY}
      - NET_LOCAL=192.168.1.0/24
    restart: unless-stopped
    ports:
      - 9117:9117 # jackett
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 9696:9696 # prowlarr
      - 9091:9091 # transmission
      - 51413:51413 # also transmission?
      - 51413:51413/udp

  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: transmission
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      # - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
      # - USER=username #optional
      # - PASS=password #optional
      # - WHITELIST=iplist #optional
      # - HOST_WHITELIST=dnsnane list #optional
    volumes:
      - ${CONFIG_PATH}/transmission:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${DOWNLOADS_PATH}/transmissionwatch:/watch
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
    - ${CONFIG_PATH}/prowlarr:/config
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${TV_PATH}:/tv #optional
      - ${DOWNLOADS_PATH}:/downloads #optional
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${MOVIE_PATH}:/movies #optional
      - ${DOWNLOADS_PATH}:/downloads #optional
    restart: unless-stopped

  miniflux:
    image: miniflux/miniflux
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      minifluxdb:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://miniflux:secret@minifluxdb/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER}
      - ADMIN_PASSWORD=${MINIFLUX_PASS}

  minifluxdb:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
    volumes:
      - ${CONFIG_PATH}/miniflux/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 3000:3000/tcp
      - 8081:80/tcp
      - 8443:443/tcp
    volumes:
      - ${CONFIG_PATH}/adguard/work:/opt/adguardhome/work
      - ${CONFIG_PATH}/adguard/config:/opt/adguardhome/conf
    restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - SERVERURL=wireguard.kerryliu.com #optional
      - SERVERPORT=51820 #optional
      - PEERS=3 #optional
      - PEERDNS=192.168.1.1 #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    volumes:
      - ${CONFIG_PATH}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  komga:
    image: gotson/komga
    container_name: komga
    volumes:
      - ${CONFIG_PATH}/komga/config:/config
      - ${BOOKS_PATH}:/data #optional
    ports:
      - 25600:8080
    user: "1000:1000"
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: --cleanup
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
